version: '3.8'

services:
  flower:
    image: mher/flower
    container_name: flower
    command: celery flower --persisten=True
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - FLOWER_PORT=8888
    ports:
      - 8888:8888 # docker will expose this ports
    volumes:
      - ./flower_data_volume:/data
    depends_on:
      - celery
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
  redis:
    image: redis:7.0.11-alpine

  django:
    container_name: django
    build:
       context: ./dcelery
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./dcelery:/usr/src/app/
    ports:
      - 8001:8000
    environment:
      - DEBUG=1
      - SECRET_KEY=django-insecure-1z*qbxug75i8w9m^q!!n*yh0zgjxzss@-gmb3h#l$_h+*ku3m2
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      - redis
  
  celery:
    container_name: celery
    build:
      context: ./dcelery
    command: celery --app=dcelery worker --hostname=celeryWorker1@%h  -l INFO -Q tasks,dead_letter
    volumes:
      - ./dcelery:/usr/src/app/
    
    environment:
      - DEBUG=1
      - SECRET_KEY=0930jd30j9jd09j09j109fj01j9f
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      - redis
      - django
      - rabbitmq
 
  
  # celery2:
  #   container_name: celery2
  #   build:
  #     context: ./celeryworker
  #     dockerfile: Dockerfile
  #   command: celery -A celerytask worker --loglevel=INFO -Q queue2
  #   volumes:
  #     - ./celeryworker:/usr/src/app/
  #   depends_on:
  #     - redis
  #     - django